/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class Return extends javax.swing.JFrame {

    /**
     * Creates new form Return
     */
    public String regno;
    boolean b1s,b2s;
    Connection con;
    Statement st;
    ResultSet rs;
    public Return(String s) throws SQLException {
        regno=s;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");
        st = con.createStatement();   
        rs=null;
        initComponents();
        rs=st.executeQuery("select * from students where reg=\'"+regno+"\'");
        rs.next();
        reg.setText(regno);
        name.setText(rs.getString(2));
        email.setText(rs.getString(5));
        branch.setText(rs.getString(3));
        rs=st.executeQuery("select isbn,book_name,issue_date,due_date from students natural join issue natural join books where reg=\'"+regno+"\'");
        int i=0;
        while(rs.next())
        {
            jTable1.setValueAt(rs.getString("isbn"), i, 0);
            jTable1.setValueAt(rs.getString("book_name"), i, 1);
            jTable1.setValueAt(rs.getString("issue_date"), i, 2);
            jTable1.setValueAt(rs.getString("due_date"), i, 3);
            i++;
        }
        rs=st.executeQuery("select sum(fine) from returns where reg=\'"+regno+"\'"+"group by reg");
        if(rs.next())
        {
            fine.setText(String.valueOf(rs.getInt("sum(fine)")));
        }
        else
        {
            fine.setText("0");
        }
    }
    
//    public static void main(String[] args) {
//        try {
//            new Return("17bce7088").setVisible(true);
//        } catch (SQLException ex) {
//            Logger.getLogger(Return.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        fine = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        reg = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        branch = new javax.swing.JTextField();
        ret = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel14.setText("Email-id:");

        email.setEditable(false);
        email.setEditable(false);
        email.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(102, 255, 102));
        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Book Name", "Issue Date", "Due Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setOpaque(false);
        jTable1.setRowHeight(30);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Fine :");

        fine.setEditable(false);
        fine.setBackground(new java.awt.Color(255, 255, 255));
        fine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fineActionPerformed(evt);
            }
        });

        jLabel1.setText("Registration No. :");

        jLabel2.setText("Name:");

        jLabel3.setText("Branch:");

        reg.setEditable(false);
        reg.setEditable(false);
        reg.setBackground(new java.awt.Color(255, 255, 255));
        reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regActionPerformed(evt);
            }
        });

        name.setEditable(false);
        name.setEditable(false);
        name.setBackground(new java.awt.Color(255, 255, 255));

        branch.setEditable(false);
        branch.setEditable(false);
        branch.setBackground(new java.awt.Color(255, 255, 255));

        ret.setText("Return");
        ret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retActionPerformed(evt);
            }
        });
        ret.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                retKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("ACCOUNT-DETAILS");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(name)
                                .addComponent(reg, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(43, 43, 43)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(branch)
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(61, 61, 61)
                            .addComponent(ret, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(fine, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ret, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fineActionPerformed

    private void regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regActionPerformed

    private void retActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retActionPerformed
        int rowcount=jTable1.getSelectedRowCount();
        if(rowcount==0)
        {
            JOptionPane.showMessageDialog(null, "No rows selected yet");
            return;
        }
        try {
            // TODO add your handling code here:
            
            int n=jTable1.getSelectedRowCount();
            int rows[]=jTable1.getSelectedRows();
            for (int i = 0; i < n; i++) {
            try
            {
                
                int d,fine=0;
                rs=st.executeQuery("select datediff(date(now()),due_date) from issue where reg=\'"+regno+"\' and isbn="+jTable1.getValueAt(rows[i], 0));
                rs.next();
                d=rs.getInt(1);
                if(d>0)
                {
                    fine=d*2*1;
                }
                st.execute("insert into returns values("+jTable1.getValueAt(rows[i], 0)+",\'"+regno+"\',"+fine+",now())");
                st.execute("delete from issue where reg=\'"+regno+"\' and isbn = "+jTable1.getValueAt(rows[i], 0));
                st.execute("update books set iquantity=iquantity-1 where isbn="+jTable1.getValueAt(rows[i], 0));
                st.executeUpdate("update students set BOOK_COUNT=BOOK_COUNT-1 where reg='"+regno+"'");
                rs=st.executeQuery("select author_name from books where isbn="+jTable1.getValueAt(rows[i], 0));
                rs.next();
                JavaEmail ob = new JavaEmail(email.getText(), "Check-ins", "<p><strong>Dear " + name.getText() + "(" + reg.getText() + ")</strong></p>\n"
                    + "<p>The following items have been returned:</p>\n"
                    + "<p>Title: " + jTable1.getValueAt(rows[i], 1) + "</p>\n"
                    + "<p>Author: " +rs.getString(1)  + "</p>\n"
                    + "<p>ISBN: " +jTable1.getValueAt(rows[i], 0)  + "</p>\n"
                    + "<p>Fine:Rs. "+fine+"</p>\n"
                    + "<p>Thank You ,</p>\n"
                    + "<p><strong>Librarian, VIT-AP Library.</strong></p>"
                    + "<p class=\"auto-style1\">\"Use your own ID Card for your own transactions.\"</p>");
                ob.start();
                rs=st.executeQuery("select count(*) from wait where isbn="+jTable1.getValueAt(rows[i], 0));
                int waitn=0;
                if(rs.next())
                {
                    waitn=rs.getInt(1);
                }
                if(waitn==0)
                {
                    st.execute("delete from renew where reg=\'"+regno+"\' and isbn="+jTable1.getValueAt(rows[i],0));
                    Startup obj=new Startup();
                    obj.setTitle("StartUp");
                     //obj.setLocation(400,400);
                     obj.setVisible(true);
                    dispose();
                    return;
                }
                rs=st.executeQuery("select reg from wait where isbn="+jTable1.getValueAt(rows[i], 0)+" and emsent is null order by position limit 1");
                rs.next();
                String reg2=rs.getString(1);
                rs=st.executeQuery("select * from students where reg=\'"+reg2+"\'");
                rs.next();
                String e=rs.getString("email");
                JavaEmail ob1 = new JavaEmail(e, "Waitlist Book Available", "<p><strong>Dear " + rs.getString("name") + "(" + rs.getString("reg") + ")</strong></p>\n"
                    + "<p>The following book is now available and is reserverd for you for 24Hrs,kindly \n"
                    + "take it as soon as possible :</p>\n"
                    + "<p>Title: " +jTable1.getValueAt(rows[i], 1) + "</p>\n"
                    + "<p>Author: " + rs.getString(1) + "</p>\n"
                    + "<p>ISBN: " + jTable1.getValueAt(rows[i],0) + "</p>\n"
                    + "<p><strong>Librarian,VIT-AP Library.</strong></p>\n"
                    + "<p>\"Use your own ID Card for your own transactions\"</p>\n"
                    + "\n"
                    + "</body>");
                ob1.start();
                st.execute("update wait set emsent=now() where reg=\'"+reg2+"\' and isbn="+jTable1.getValueAt(rows[i], 0));
                st.execute("delete from renew where reg=\'"+regno+"\' and isbn="+jTable1.getValueAt(rows[i],0));
            
            }
            catch(SQLException ex)
            {
                Logger.getLogger(Return.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            Startup obj=new Startup();
            obj.setTitle("StartUp");
            //obj.setLocation(400,400);
            obj.setVisible(true);
            dispose();
        }
        } 
        catch (Exception ex) {
            Logger.getLogger(Return.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_retActionPerformed

    private void retKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_retKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            try {
                Startup obj = new Startup();
                obj.setTitle("StartUp");
                //obj.setLocation(400,400);
                obj.setVisible(true);
                dispose();
            } catch (SQLException ex) {
                Logger.getLogger(Return.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_retKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Student_Menu obj=new Student_Menu(reg.getText());
        obj.setTitle("Student Menu");
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            Student_Menu obj = new Student_Menu(reg.getText());
            obj.setTitle("Student Menu");
            obj.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jButton1KeyPressed
    
//    public void returnbook() throws SQLException, MessagingException
//    {
//        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "root");
//        Statement st = con.createStatement();
//        ResultSet rs = null;
//        rs=st.executeQuery("select * from student where reg='"+reg.getText()+"'");
//        rs.next();
//        if(b1s&&rs.getString(4)!=null)
//        {
//            rs=st.executeQuery("SELECT DATEDIFF(CURDATE(),'"+due1.getText()+"') AS DateDiff");
//            rs.next();
//            int diff=rs.getInt(1);
//            st.executeUpdate("update student set ISBN1=NULL,ISSUE1=NULL,DUE1=NULL,BOOK_COUNT=BOOK_COUNT-1 where reg='"+reg.getText()+"'");
//            st.executeUpdate("update lib set iquantity=iquantity-1 where ISBN="+isbn1.getText());
//            int fine=0;
//            if(diff==0)
//            {
//                JOptionPane.showMessageDialog(null, "Book 1: Returned Fine=Rs.0");
//                fine=0;
//            }
//            else if(diff>0)
//            {
//                JOptionPane.showMessageDialog(null, "Book 1: You have to pay the fine of Rs. "+2*diff);
//                fine=2*diff;
//            }
//            else
//            {
//                JOptionPane.showMessageDialog(null, "Book 1: Returned Fine=Rs.0");
//                fine=0;
//            }
//            ResultSet rs2 = st.executeQuery("select * from lib where ISBN=" + isbn1.getText());
//            rs2.next();
//            String ti = rs2.getString("Book_Name");
//            String au = rs2.getString("Author_Name");
//            JavaEmail ob = new JavaEmail(email.getText(), "Check-ins", "<p><strong>Dear " + name.getText() + "(" + reg.getText() + ")</strong></p>\n"
//                    + "<p>The following items have been returned:</p>\n"
//                    + "<p>Title: " + ti + "</p>\n"
//                    + "<p>Author: " + au + "</p>\n"
//                    + "<p>ISBN: " + isbn1.getText() + "</p>\n"
//                    + "<p>Fine:Rs. "+fine+"</p>\n"
//                    + "<p>Thank You ,</p>\n"
//                    + "<p><strong>Librarian, VIT-AP Library.</strong></p>"
//                    + "<p class=\"auto-style1\">\"Use your own ID Card for your own transactions.\"</p>");
//            ob.start();
//            rs=st.executeQuery("select waitn from lib where ISBN="+isbn1.getText());
//            rs.next();
//            int count=rs.getInt(1);
//            if(count!=0)
//            {
//                rs = st.executeQuery("select emsent from lib where ISBN=" + isbn1.getText());
//                rs.next();
//                String t1=rs.getString(1);
//                int ind=0;
//                if(t1==null||t1.equals(""))
//                {
//                    ind=0;
//                }
//                else
//                {
//                    String x[]=t1.split(",");
//                    ind=x.length;
//                }
//                rs = st.executeQuery("select  wait from lib where ISBN=" + isbn1.getText());
//                rs.next();
//                String t = rs.getString(1);
//                String im[] = t.split(",");
//                if(im.length!=ind)
//                {
//                    rs = st.executeQuery("select * from student where reg='" + im[ind] + "'");
//                    rs.next();
//                    String e = rs.getString("email");
//                    JavaEmail ob1 = new JavaEmail(e, "Waitlist Book Available", "<p><strong>Dear " + rs.getString("name") + "(" + rs.getString("reg") + ")</strong></p>\n"
//                            + "<p>The following book is now available and is reserverd for you for 24Hrs,kindly \n"
//                            + "take it as soon as possible :</p>\n"
//                            + "<p>Title: " + ti + "</p>\n"
//                            + "<p>Author: " + au + "</p>\n"
//                            + "<p>ISBN: " + isbn1.getText() + "</p>\n"
//                            + "<p><strong>Librarian,VIT-AP Library.</strong></p>\n"
//                            + "<p>\"Use your own ID Card for your own transactions\"</p>\n"
//                            + "\n"
//                            + "</body>");
//                    ob1.start();
//                    rs = st.executeQuery("select emsent from lib where ISBN=" + isbn1.getText());
//                    rs.next();
//                    String dates = rs.getString(1);
//                    rs = st.executeQuery("select now()");
//                    rs.next();
//                    String da = rs.getString(1);
//                    if (dates == null) {
//                        dates = da + ",";
//                    } else {
//                        dates = dates + da + ",";
//                    }
//                    st.executeUpdate("update lib set emsent='" + dates + "' where ISBN=" + isbn1.getText());
//                }
//            }
//        }
//        rs=st.executeQuery("select * from student where reg='"+reg.getText()+"'");
//        rs.next();
//        if(b2s&&rs.getString(7)!=null)
//        {
//            rs=st.executeQuery("SELECT DATEDIFF(CURDATE(),'"+due2.getText()+"') AS DateDiff");
//            rs.next();
//            int diff=rs.getInt(1);
//            st.executeUpdate("update student set ISBN2=NULL,ISSUE2=NULL,DUE2=NULL,BOOK_COUNT=BOOK_COUNT-1 where reg='"+reg.getText()+"'");
//            st.executeUpdate("update lib set iquantity=iquantity-1 where ISBN="+isbn2.getText());
//            int fine=0;
//            if(diff==0)
//            {
//                JOptionPane.showMessageDialog(null, "Book 2: Returned Fine=Rs.0");
//                fine=0;
//            }
//            else if(diff>0)
//            {
//                JOptionPane.showMessageDialog(null, "Book 2: You have to pay the fine of Rs. "+2*diff);
//                fine=2*diff;
//            }
//            else
//            {
//                JOptionPane.showMessageDialog(null, "Book 2: Returned Fine=Rs.0");
//                fine=0;
//            }
//            ResultSet rs2 = st.executeQuery("select * from lib where ISBN=" + isbn2.getText());
//                rs2.next();
//                String ti = rs2.getString("Book_Name");
//                String au = rs2.getString("Author_Name");
//                JavaEmail ob = new JavaEmail(email.getText(), "Check-ins", "<p><strong>Dear " + name.getText() + "(" + reg.getText() + ")</strong></p>\n"
//                            + "<p>The following items have been returned:</p>\n"
//                            + "<p>Title: " + ti + "</p>\n"
//                            + "<p>Author: " + au + "</p>\n"
//                            + "<p>ISBN: " + isbn2.getText() + "</p>\n"
//                            + "<p>Fine:Rs. "+fine+"</p>\n"
//                            + "<p>Thank You ,</p>\n"
//                            + "<p><strong>Librarian, VIT-AP Library.</strong></p>"
//                            + "<p class=\"auto-style1\">\"Use your own ID Card for your own transactions.\"</p>");
//                    ob.start();
//                    rs=st.executeQuery("select waitn from lib where ISBN="+isbn2.getText());
//            rs.next();
//            int count=rs.getInt(1);
//            if(count!=0)
//            {
//                rs = st.executeQuery("select emsent from lib where ISBN=" + isbn2.getText());
//                rs.next();
//                String t1=rs.getString(1);
//                int ind=0;
//                if(t1==null||t1.equals(""))
//                {
//                    ind=0;
//                }
//                else
//                {
//                    String x[]=t1.split(",");
//                    ind=x.length;
//                }
//                rs = st.executeQuery("select  wait from lib where ISBN=" + isbn2.getText());
//                rs.next();
//                String t = rs.getString(1);
//                String im[] = t.split(",");
//                rs = st.executeQuery("select * from student where reg='" + im[ind] + "'");
//                rs.next();
//                String e = rs.getString("email");
//                JavaEmail ob1 = new JavaEmail(e, "Waitlist Book Available", "<p><strong>Dear " + rs.getString("name") + "(" + rs.getString("reg") + ")</strong></p>\n"
//                        + "<p>The following book is now available and is reserverd for you for 24Hrs,kindly \n"
//                        + "take it as soon as possible :</p>\n"
//                        + "<p>Title: " + ti + "</p>\n"
//                        + "<p>Author: " + au + "</p>\n"
//                        + "<p>ISBN: " + isbn2.getText() + "</p>\n"
//                        + "<p><strong>Librarian,VIT-AP Library.</strong></p>\n"
//                        + "<p>\"Use your own ID Card for your own transactions\"</p>\n"
//                        + "\n"
//                        + "</body>");
//                ob1.start();
//                rs=st.executeQuery("select emsent from lib where ISBN="+isbn2.getText());
//                rs.next();
//                String dates=rs.getString(1);
//                rs=st.executeQuery("select now()");
//                rs.next();
//                String da=rs.getString(1);
//                if(dates==null)
//                    dates=da+",";
//                else
//                    dates=dates+da+",";
//                st.executeUpdate("update lib set emsent='"+dates+"' where ISBN="+isbn2.getText());
//            }
//                    
//        }
////        Startup obj=new Startup();
////        obj.setTitle("Start Up");
////        obj.setVisible(true);
////        dispose();
//    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Return().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField branch;
    public javax.swing.JTextField email;
    private javax.swing.JTextField fine;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField name;
    public javax.swing.JTextField reg;
    private javax.swing.JButton ret;
    // End of variables declaration//GEN-END:variables
}
